package com.dbs.project.model;

import java.io.Serializable;
import java.util.Collection;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.Data;

@Entity
@Table
@Data
public class BankAccounts implements Serializable{

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long account_id;
	private long acnumber;
	private double balance;
	
	
	/*
	 * @ManyToOne(fetch = FetchType.LAZY,optional = false)
	 * 
	 * @JoinColumn(name = "custid",nullable = false)
	 */
	  
	  private Customer customer;
	
	/*
	 * @OneToMany(mappedBy = "account", fetch = FetchType.LAZY) private
	 * Collection<Transactions> transactions;
	 */
	
	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		BankAccounts other = (BankAccounts) obj;
		if (acnumber == null) {
			if (other.acnumber != null)
				return false;
		} else if (!acnumber.equals(other.acnumber))
			return false;
		if (Double.doubleToLongBits(balance) != Double.doubleToLongBits(other.balance))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((acnumber == null) ? 0 : acnumber.hashCode());
		long temp;
		temp = Double.doubleToLongBits(balance);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		return result;
	}

	
	
	
	/*
	 * public Collection<Transactions> getOperations() { return transactions; }
	 * 
	 * public void setOperations(Collection<Transactions> operations) {
	 * this.transactions = transactions; }
	 */
	
	
}
